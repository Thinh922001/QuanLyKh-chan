#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DXApplication1.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_Khach_San")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHITIETDATPHONG(CHITIETDATPHONG instance);
    partial void UpdateCHITIETDATPHONG(CHITIETDATPHONG instance);
    partial void DeleteCHITIETDATPHONG(CHITIETDATPHONG instance);
    partial void InsertDatPhong(DatPhong instance);
    partial void UpdateDatPhong(DatPhong instance);
    partial void DeleteDatPhong(DatPhong instance);
    partial void InsertDatPhong_SanPham(DatPhong_SanPham instance);
    partial void UpdateDatPhong_SanPham(DatPhong_SanPham instance);
    partial void DeleteDatPhong_SanPham(DatPhong_SanPham instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiPhong(LoaiPhong instance);
    partial void UpdateLoaiPhong(LoaiPhong instance);
    partial void DeleteLoaiPhong(LoaiPhong instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhong(Phong instance);
    partial void UpdatePhong(Phong instance);
    partial void DeletePhong(Phong instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertTang(Tang instance);
    partial void UpdateTang(Tang instance);
    partial void DeleteTang(Tang instance);
    partial void InsertThietBi(ThietBi instance);
    partial void UpdateThietBi(ThietBi instance);
    partial void DeleteThietBi(ThietBi instance);
    partial void InsertPhong_ThietBi(Phong_ThietBi instance);
    partial void UpdatePhong_ThietBi(Phong_ThietBi instance);
    partial void DeletePhong_ThietBi(Phong_ThietBi instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DXApplication1.Properties.Settings.Default.QL_Khach_SanConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHITIETDATPHONG> CHITIETDATPHONGs
		{
			get
			{
				return this.GetTable<CHITIETDATPHONG>();
			}
		}
		
		public System.Data.Linq.Table<DatPhong> DatPhongs
		{
			get
			{
				return this.GetTable<DatPhong>();
			}
		}
		
		public System.Data.Linq.Table<DatPhong_SanPham> DatPhong_SanPhams
		{
			get
			{
				return this.GetTable<DatPhong_SanPham>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiPhong> LoaiPhongs
		{
			get
			{
				return this.GetTable<LoaiPhong>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<Phong> Phongs
		{
			get
			{
				return this.GetTable<Phong>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<Tang> Tangs
		{
			get
			{
				return this.GetTable<Tang>();
			}
		}
		
		public System.Data.Linq.Table<ThietBi> ThietBis
		{
			get
			{
				return this.GetTable<ThietBi>();
			}
		}
		
		public System.Data.Linq.Table<Phong_ThietBi> Phong_ThietBis
		{
			get
			{
				return this.GetTable<Phong_ThietBi>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDATPHONG")]
	public partial class CHITIETDATPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDatPhong;
		
		private string _MAPH;
		
		private System.Nullable<int> _SoNgayO;
		
		private System.Nullable<double> _DonGia;
		
		private System.Nullable<double> _ThanhTien;
		
		private System.Nullable<System.DateTime> _Ngay;
		
		private EntityRef<DatPhong> _DatPhong;
		
		private EntityRef<Phong> _Phong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDatPhongChanging(int value);
    partial void OnMaDatPhongChanged();
    partial void OnMAPHChanging(string value);
    partial void OnMAPHChanged();
    partial void OnSoNgayOChanging(System.Nullable<int> value);
    partial void OnSoNgayOChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    partial void OnNgayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChanged();
    #endregion
		
		public CHITIETDATPHONG()
		{
			this._DatPhong = default(EntityRef<DatPhong>);
			this._Phong = default(EntityRef<Phong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatPhong", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDatPhong
		{
			get
			{
				return this._MaDatPhong;
			}
			set
			{
				if ((this._MaDatPhong != value))
				{
					if (this._DatPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDatPhongChanging(value);
					this.SendPropertyChanging();
					this._MaDatPhong = value;
					this.SendPropertyChanged("MaDatPhong");
					this.OnMaDatPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPH
		{
			get
			{
				return this._MAPH;
			}
			set
			{
				if ((this._MAPH != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHChanging(value);
					this.SendPropertyChanging();
					this._MAPH = value;
					this.SendPropertyChanged("MAPH");
					this.OnMAPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNgayO", DbType="Int")]
		public System.Nullable<int> SoNgayO
		{
			get
			{
				return this._SoNgayO;
			}
			set
			{
				if ((this._SoNgayO != value))
				{
					this.OnSoNgayOChanging(value);
					this.SendPropertyChanging();
					this._SoNgayO = value;
					this.SendPropertyChanged("SoNgayO");
					this.OnSoNgayOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date")]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_CHITIETDATPHONG", Storage="_DatPhong", ThisKey="MaDatPhong", OtherKey="MaDatPhong", IsForeignKey=true)]
		public DatPhong DatPhong
		{
			get
			{
				return this._DatPhong.Entity;
			}
			set
			{
				DatPhong previousValue = this._DatPhong.Entity;
				if (((previousValue != value) 
							|| (this._DatPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatPhong.Entity = null;
						previousValue.CHITIETDATPHONGs.Remove(this);
					}
					this._DatPhong.Entity = value;
					if ((value != null))
					{
						value.CHITIETDATPHONGs.Add(this);
						this._MaDatPhong = value.MaDatPhong;
					}
					else
					{
						this._MaDatPhong = default(int);
					}
					this.SendPropertyChanged("DatPhong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_CHITIETDATPHONG", Storage="_Phong", ThisKey="MAPH", OtherKey="MaPH", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.CHITIETDATPHONGs.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.CHITIETDATPHONGs.Add(this);
						this._MAPH = value.MaPH;
					}
					else
					{
						this._MAPH = default(string);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatPhong")]
	public partial class DatPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDatPhong;
		
		private string _MaKH;
		
		private System.Nullable<System.DateTime> _NgayDat;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private System.Nullable<int> _SoNguoiO;
		
		private string _MaNV;
		
		private System.Nullable<double> _TongTien;
		
		private System.Nullable<bool> _TinhTrang;
		
		private System.Nullable<bool> _Theodoan;
		
		private string _ghichu;
		
		private EntitySet<CHITIETDATPHONG> _CHITIETDATPHONGs;
		
		private EntitySet<DatPhong_SanPham> _DatPhong_SanPhams;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDatPhongChanging(int value);
    partial void OnMaDatPhongChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    partial void OnSoNguoiOChanging(System.Nullable<int> value);
    partial void OnSoNguoiOChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    partial void OnTheodoanChanging(System.Nullable<bool> value);
    partial void OnTheodoanChanged();
    partial void OnghichuChanging(string value);
    partial void OnghichuChanged();
    #endregion
		
		public DatPhong()
		{
			this._CHITIETDATPHONGs = new EntitySet<CHITIETDATPHONG>(new Action<CHITIETDATPHONG>(this.attach_CHITIETDATPHONGs), new Action<CHITIETDATPHONG>(this.detach_CHITIETDATPHONGs));
			this._DatPhong_SanPhams = new EntitySet<DatPhong_SanPham>(new Action<DatPhong_SanPham>(this.attach_DatPhong_SanPhams), new Action<DatPhong_SanPham>(this.detach_DatPhong_SanPhams));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		public DatPhong(string _makh, string _maph, DateTime _ngaydat, DateTime _ngayTra, int _songuoio, string _manv, double _tongtien, bool _tinhtrang, bool _theodoan, string _ghichu)
		{
			MaKH = _makh;
			NgayDat = _ngaydat;
			NgayTra = _ngayTra;
			SoNguoiO = _songuoio;
			MaNV = _manv;
			TongTien = _tongtien;
			TinhTrang = _tinhtrang;
			Theodoan = _theodoan;
			ghichu = _ghichu;

		}
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatPhong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDatPhong
		{
			get
			{
				return this._MaDatPhong;
			}
			set
			{
				if ((this._MaDatPhong != value))
				{
					this.OnMaDatPhongChanging(value);
					this.SendPropertyChanging();
					this._MaDatPhong = value;
					this.SendPropertyChanged("MaDatPhong");
					this.OnMaDatPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Char(10)")]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNguoiO", DbType="Int")]
		public System.Nullable<int> SoNguoiO
		{
			get
			{
				return this._SoNguoiO;
			}
			set
			{
				if ((this._SoNguoiO != value))
				{
					this.OnSoNguoiOChanging(value);
					this.SendPropertyChanging();
					this._SoNguoiO = value;
					this.SendPropertyChanged("SoNguoiO");
					this.OnSoNguoiOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Theodoan", DbType="Bit")]
		public System.Nullable<bool> Theodoan
		{
			get
			{
				return this._Theodoan;
			}
			set
			{
				if ((this._Theodoan != value))
				{
					this.OnTheodoanChanging(value);
					this.SendPropertyChanging();
					this._Theodoan = value;
					this.SendPropertyChanged("Theodoan");
					this.OnTheodoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ghichu", DbType="NVarChar(2000)")]
		public string ghichu
		{
			get
			{
				return this._ghichu;
			}
			set
			{
				if ((this._ghichu != value))
				{
					this.OnghichuChanging(value);
					this.SendPropertyChanging();
					this._ghichu = value;
					this.SendPropertyChanged("ghichu");
					this.OnghichuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_CHITIETDATPHONG", Storage="_CHITIETDATPHONGs", ThisKey="MaDatPhong", OtherKey="MaDatPhong")]
		public EntitySet<CHITIETDATPHONG> CHITIETDATPHONGs
		{
			get
			{
				return this._CHITIETDATPHONGs;
			}
			set
			{
				this._CHITIETDATPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_DatPhong_SanPham", Storage="_DatPhong_SanPhams", ThisKey="MaDatPhong", OtherKey="MaDatPhong")]
		public EntitySet<DatPhong_SanPham> DatPhong_SanPhams
		{
			get
			{
				return this._DatPhong_SanPhams;
			}
			set
			{
				this._DatPhong_SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatPhong", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MAKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DatPhongs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DatPhongs.Add(this);
						this._MaKH = value.MAKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DatPhong", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.DatPhongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.DatPhongs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDATPHONGs(CHITIETDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = this;
		}
		
		private void detach_CHITIETDATPHONGs(CHITIETDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = null;
		}
		
		private void attach_DatPhong_SanPhams(DatPhong_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = this;
		}
		
		private void detach_DatPhong_SanPhams(DatPhong_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatPhong_SanPham")]
	public partial class DatPhong_SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDatPhong;
		
		private string _MAPH;
		
		private string _MASP;
		
		private System.Nullable<System.DateTime> _Ngay;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<double> _DonGia;
		
		private System.Nullable<double> _ThanhTien;
		
		private EntityRef<DatPhong> _DatPhong;
		
		private EntityRef<Phong> _Phong;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDatPhongChanging(int value);
    partial void OnMaDatPhongChanged();
    partial void OnMAPHChanging(string value);
    partial void OnMAPHChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnNgayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public DatPhong_SanPham()
		{
			this._DatPhong = default(EntityRef<DatPhong>);
			this._Phong = default(EntityRef<Phong>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatPhong", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDatPhong
		{
			get
			{
				return this._MaDatPhong;
			}
			set
			{
				if ((this._MaDatPhong != value))
				{
					if (this._DatPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDatPhongChanging(value);
					this.SendPropertyChanging();
					this._MaDatPhong = value;
					this.SendPropertyChanged("MaDatPhong");
					this.OnMaDatPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPH
		{
			get
			{
				return this._MAPH;
			}
			set
			{
				if ((this._MAPH != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHChanging(value);
					this.SendPropertyChanging();
					this._MAPH = value;
					this.SendPropertyChanged("MAPH");
					this.OnMAPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date")]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_DatPhong_SanPham", Storage="_DatPhong", ThisKey="MaDatPhong", OtherKey="MaDatPhong", IsForeignKey=true)]
		public DatPhong DatPhong
		{
			get
			{
				return this._DatPhong.Entity;
			}
			set
			{
				DatPhong previousValue = this._DatPhong.Entity;
				if (((previousValue != value) 
							|| (this._DatPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatPhong.Entity = null;
						previousValue.DatPhong_SanPhams.Remove(this);
					}
					this._DatPhong.Entity = value;
					if ((value != null))
					{
						value.DatPhong_SanPhams.Add(this);
						this._MaDatPhong = value.MaDatPhong;
					}
					else
					{
						this._MaDatPhong = default(int);
					}
					this.SendPropertyChanged("DatPhong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_DatPhong_SanPham", Storage="_Phong", ThisKey="MAPH", OtherKey="MaPH", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.DatPhong_SanPhams.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.DatPhong_SanPhams.Add(this);
						this._MAPH = value.MaPH;
					}
					else
					{
						this._MAPH = default(string);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_DatPhong_SanPham", Storage="_SanPham", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.DatPhong_SanPhams.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.DatPhong_SanPhams.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _TenKH;
		
		private string _CMND;
		
		private string _DienThoai;
		
		private string _Email;
		
		private string _DiaChi;
		
		private EntitySet<DatPhong> _DatPhongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public KhachHang()
		{
			this._DatPhongs = new EntitySet<DatPhong>(new Action<DatPhong>(this.attach_DatPhongs), new Action<DatPhong>(this.detach_DatPhongs));
			OnCreated();
		}
		public KhachHang(string _makh, string _tenkh, string _cc, string _diachi, string _email, string _sdt) : this()
		{
			MAKH = _makh;
			TenKH = _tenkh;
			CMND = _cc;
			Email = _email;
			DienThoai = _sdt;
			DiaChi = _diachi;
		}
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(50)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(50)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatPhong", Storage="_DatPhongs", ThisKey="MAKH", OtherKey="MaKH")]
		public EntitySet<DatPhong> DatPhongs
		{
			get
			{
				return this._DatPhongs;
			}
			set
			{
				this._DatPhongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatPhongs(DatPhong entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DatPhongs(DatPhong entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiPhong")]
	public partial class LoaiPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLP;
		
		private string _TenPhong;
		
		private System.Nullable<long> _DonGia;
		
		private System.Nullable<int> _SoNguoi;
		
		private System.Nullable<int> _SoGiuong;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLPChanging(string value);
    partial void OnMaLPChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    partial void OnDonGiaChanging(System.Nullable<long> value);
    partial void OnDonGiaChanged();
    partial void OnSoNguoiChanging(System.Nullable<int> value);
    partial void OnSoNguoiChanged();
    partial void OnSoGiuongChanging(System.Nullable<int> value);
    partial void OnSoGiuongChanged();
    #endregion
		
		public LoaiPhong()
		{
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		public LoaiPhong(string _malp, string _tenlp, int _songuoi, int _sogiuong, long _dongia) : this()
		{
			MaLP = _malp;
			TenPhong = _tenlp;
			SoNguoi = _songuoi;
			SoGiuong = _sogiuong;
			DonGia = _dongia;
		}
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLP
		{
			get
			{
				return this._MaLP;
			}
			set
			{
				if ((this._MaLP != value))
				{
					this.OnMaLPChanging(value);
					this.SendPropertyChanging();
					this._MaLP = value;
					this.SendPropertyChanged("MaLP");
					this.OnMaLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NVarChar(50)")]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="BigInt")]
		public System.Nullable<long> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNguoi", DbType="Int")]
		public System.Nullable<int> SoNguoi
		{
			get
			{
				return this._SoNguoi;
			}
			set
			{
				if ((this._SoNguoi != value))
				{
					this.OnSoNguoiChanging(value);
					this.SendPropertyChanging();
					this._SoNguoi = value;
					this.SendPropertyChanged("SoNguoi");
					this.OnSoNguoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoGiuong", DbType="Int")]
		public System.Nullable<int> SoGiuong
		{
			get
			{
				return this._SoGiuong;
			}
			set
			{
				if ((this._SoGiuong != value))
				{
					this.OnSoGiuongChanging(value);
					this.SendPropertyChanging();
					this._SoGiuong = value;
					this.SendPropertyChanged("SoGiuong");
					this.OnSoGiuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_Phongs", ThisKey="MaLP", OtherKey="MALP")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _HoTen;
		
		private string _MatKhau;
		
		private string _quyen;
		
		private EntitySet<DatPhong> _DatPhongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnquyenChanging(string value);
    partial void OnquyenChanged();
    #endregion
		
		public NhanVien()
		{
			this._DatPhongs = new EntitySet<DatPhong>(new Action<DatPhong>(this.attach_DatPhongs), new Action<DatPhong>(this.detach_DatPhongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="Char(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quyen", DbType="NVarChar(50)")]
		public string quyen
		{
			get
			{
				return this._quyen;
			}
			set
			{
				if ((this._quyen != value))
				{
					this.OnquyenChanging(value);
					this.SendPropertyChanging();
					this._quyen = value;
					this.SendPropertyChanged("quyen");
					this.OnquyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DatPhong", Storage="_DatPhongs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<DatPhong> DatPhongs
		{
			get
			{
				return this._DatPhongs;
			}
			set
			{
				this._DatPhongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatPhongs(DatPhong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_DatPhongs(DatPhong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong")]
	public partial class Phong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPH;
		
		private string _TenPH;
		
		private string _TrangThai;
		
		private int _MaTang;
		
		private string _MALP;
		
		private EntitySet<CHITIETDATPHONG> _CHITIETDATPHONGs;
		
		private EntitySet<DatPhong_SanPham> _DatPhong_SanPhams;
		
		private EntitySet<Phong_ThietBi> _Phong_ThietBis;
		
		private EntityRef<LoaiPhong> _LoaiPhong;
		
		private EntityRef<Tang> _Tang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPHChanging(string value);
    partial void OnMaPHChanged();
    partial void OnTenPHChanging(string value);
    partial void OnTenPHChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnMaTangChanging(int value);
    partial void OnMaTangChanged();
    partial void OnMALPChanging(string value);
    partial void OnMALPChanged();
    #endregion
		
		public Phong()
		{
			this._CHITIETDATPHONGs = new EntitySet<CHITIETDATPHONG>(new Action<CHITIETDATPHONG>(this.attach_CHITIETDATPHONGs), new Action<CHITIETDATPHONG>(this.detach_CHITIETDATPHONGs));
			this._DatPhong_SanPhams = new EntitySet<DatPhong_SanPham>(new Action<DatPhong_SanPham>(this.attach_DatPhong_SanPhams), new Action<DatPhong_SanPham>(this.detach_DatPhong_SanPhams));
			this._Phong_ThietBis = new EntitySet<Phong_ThietBi>(new Action<Phong_ThietBi>(this.attach_Phong_ThietBis), new Action<Phong_ThietBi>(this.detach_Phong_ThietBis));
			this._LoaiPhong = default(EntityRef<LoaiPhong>);
			this._Tang = default(EntityRef<Tang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPH
		{
			get
			{
				return this._MaPH;
			}
			set
			{
				if ((this._MaPH != value))
				{
					this.OnMaPHChanging(value);
					this.SendPropertyChanging();
					this._MaPH = value;
					this.SendPropertyChanged("MaPH");
					this.OnMaPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPH", DbType="NVarChar(50)")]
		public string TenPH
		{
			get
			{
				return this._TenPH;
			}
			set
			{
				if ((this._TenPH != value))
				{
					this.OnTenPHChanging(value);
					this.SendPropertyChanging();
					this._TenPH = value;
					this.SendPropertyChanged("TenPH");
					this.OnTenPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTang", DbType="Int NOT NULL")]
		public int MaTang
		{
			get
			{
				return this._MaTang;
			}
			set
			{
				if ((this._MaTang != value))
				{
					if (this._Tang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTangChanging(value);
					this.SendPropertyChanging();
					this._MaTang = value;
					this.SendPropertyChanged("MaTang");
					this.OnMaTangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALP", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MALP
		{
			get
			{
				return this._MALP;
			}
			set
			{
				if ((this._MALP != value))
				{
					if (this._LoaiPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALPChanging(value);
					this.SendPropertyChanging();
					this._MALP = value;
					this.SendPropertyChanged("MALP");
					this.OnMALPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_CHITIETDATPHONG", Storage="_CHITIETDATPHONGs", ThisKey="MaPH", OtherKey="MAPH")]
		public EntitySet<CHITIETDATPHONG> CHITIETDATPHONGs
		{
			get
			{
				return this._CHITIETDATPHONGs;
			}
			set
			{
				this._CHITIETDATPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_DatPhong_SanPham", Storage="_DatPhong_SanPhams", ThisKey="MaPH", OtherKey="MAPH")]
		public EntitySet<DatPhong_SanPham> DatPhong_SanPhams
		{
			get
			{
				return this._DatPhong_SanPhams;
			}
			set
			{
				this._DatPhong_SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_Phong_ThietBi", Storage="_Phong_ThietBis", ThisKey="MaPH", OtherKey="MAPH")]
		public EntitySet<Phong_ThietBi> Phong_ThietBis
		{
			get
			{
				return this._Phong_ThietBis;
			}
			set
			{
				this._Phong_ThietBis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_LoaiPhong", ThisKey="MALP", OtherKey="MaLP", IsForeignKey=true)]
		public LoaiPhong LoaiPhong
		{
			get
			{
				return this._LoaiPhong.Entity;
			}
			set
			{
				LoaiPhong previousValue = this._LoaiPhong.Entity;
				if (((previousValue != value) 
							|| (this._LoaiPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiPhong.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._LoaiPhong.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._MALP = value.MaLP;
					}
					else
					{
						this._MALP = default(string);
					}
					this.SendPropertyChanged("LoaiPhong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tang_Phong", Storage="_Tang", ThisKey="MaTang", OtherKey="MATANG", IsForeignKey=true)]
		public Tang Tang
		{
			get
			{
				return this._Tang.Entity;
			}
			set
			{
				Tang previousValue = this._Tang.Entity;
				if (((previousValue != value) 
							|| (this._Tang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tang.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._Tang.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._MaTang = value.MATANG;
					}
					else
					{
						this._MaTang = default(int);
					}
					this.SendPropertyChanged("Tang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDATPHONGs(CHITIETDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_CHITIETDATPHONGs(CHITIETDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
		
		private void attach_DatPhong_SanPhams(DatPhong_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_DatPhong_SanPhams(DatPhong_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
		
		private void attach_Phong_ThietBis(Phong_ThietBi entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_Phong_ThietBis(Phong_ThietBi entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private string _TENSP;
		
		private System.Nullable<double> _DONGIA;
		
		private EntitySet<DatPhong_SanPham> _DatPhong_SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnDONGIAChanging(System.Nullable<double> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public SanPham()
		{
			this._DatPhong_SanPhams = new EntitySet<DatPhong_SanPham>(new Action<DatPhong_SanPham>(this.attach_DatPhong_SanPhams), new Action<DatPhong_SanPham>(this.detach_DatPhong_SanPhams));
			OnCreated();
		}
		public SanPham(string _masp,string _tensp,double _donGia):this()
        {
			MASP = _masp;
			TENSP = _tensp;
			DONGIA = _donGia;
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(50)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Float")]
		public System.Nullable<double> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_DatPhong_SanPham", Storage="_DatPhong_SanPhams", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<DatPhong_SanPham> DatPhong_SanPhams
		{
			get
			{
				return this._DatPhong_SanPhams;
			}
			set
			{
				this._DatPhong_SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatPhong_SanPhams(DatPhong_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_DatPhong_SanPhams(DatPhong_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tang")]
	public partial class Tang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATANG;
		
		private string _TenTang;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATANGChanging(int value);
    partial void OnMATANGChanged();
    partial void OnTenTangChanging(string value);
    partial void OnTenTangChanged();
    #endregion
		
		public Tang()
		{
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		public Tang(int _matang, string _tentang) : this()
		{
			MATANG = _matang;
			TenTang = _tentang;
		}
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATANG", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MATANG
		{
			get
			{
				return this._MATANG;
			}
			set
			{
				if ((this._MATANG != value))
				{
					this.OnMATANGChanging(value);
					this.SendPropertyChanging();
					this._MATANG = value;
					this.SendPropertyChanged("MATANG");
					this.OnMATANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTang", DbType="NVarChar(10)")]
		public string TenTang
		{
			get
			{
				return this._TenTang;
			}
			set
			{
				if ((this._TenTang != value))
				{
					this.OnTenTangChanging(value);
					this.SendPropertyChanging();
					this._TenTang = value;
					this.SendPropertyChanged("TenTang");
					this.OnTenTangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tang_Phong", Storage="_Phongs", ThisKey="MATANG", OtherKey="MaTang")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.Tang = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.Tang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThietBi")]
	public partial class ThietBi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATB;
		
		private string _TenTB;
		
		private System.Nullable<double> _DonGia;
		
		private EntitySet<Phong_ThietBi> _Phong_ThietBis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATBChanging(string value);
    partial void OnMATBChanged();
    partial void OnTenTBChanging(string value);
    partial void OnTenTBChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public ThietBi()
		{
			this._Phong_ThietBis = new EntitySet<Phong_ThietBi>(new Action<Phong_ThietBi>(this.attach_Phong_ThietBis), new Action<Phong_ThietBi>(this.detach_Phong_ThietBis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTB", DbType="NVarChar(20)")]
		public string TenTB
		{
			get
			{
				return this._TenTB;
			}
			set
			{
				if ((this._TenTB != value))
				{
					this.OnTenTBChanging(value);
					this.SendPropertyChanging();
					this._TenTB = value;
					this.SendPropertyChanged("TenTB");
					this.OnTenTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_Phong_ThietBi", Storage="_Phong_ThietBis", ThisKey="MATB", OtherKey="MATB")]
		public EntitySet<Phong_ThietBi> Phong_ThietBis
		{
			get
			{
				return this._Phong_ThietBis;
			}
			set
			{
				this._Phong_ThietBis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phong_ThietBis(Phong_ThietBi entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = this;
		}
		
		private void detach_Phong_ThietBis(Phong_ThietBi entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong_ThietBi")]
	public partial class Phong_ThietBi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPH;
		
		private string _MATB;
		
		private System.Nullable<int> _soLuong;
		
		private EntityRef<Phong> _Phong;
		
		private EntityRef<ThietBi> _ThietBi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHChanging(string value);
    partial void OnMAPHChanged();
    partial void OnMATBChanging(string value);
    partial void OnMATBChanged();
    partial void OnsoLuongChanging(System.Nullable<int> value);
    partial void OnsoLuongChanged();
    #endregion
		
		public Phong_ThietBi()
		{
			this._Phong = default(EntityRef<Phong>);
			this._ThietBi = default(EntityRef<ThietBi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPH
		{
			get
			{
				return this._MAPH;
			}
			set
			{
				if ((this._MAPH != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHChanging(value);
					this.SendPropertyChanging();
					this._MAPH = value;
					this.SendPropertyChanged("MAPH");
					this.OnMAPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					if (this._ThietBi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Int")]
		public System.Nullable<int> soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_Phong_ThietBi", Storage="_Phong", ThisKey="MAPH", OtherKey="MaPH", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.Phong_ThietBis.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.Phong_ThietBis.Add(this);
						this._MAPH = value.MaPH;
					}
					else
					{
						this._MAPH = default(string);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_Phong_ThietBi", Storage="_ThietBi", ThisKey="MATB", OtherKey="MATB", IsForeignKey=true)]
		public ThietBi ThietBi
		{
			get
			{
				return this._ThietBi.Entity;
			}
			set
			{
				ThietBi previousValue = this._ThietBi.Entity;
				if (((previousValue != value) 
							|| (this._ThietBi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThietBi.Entity = null;
						previousValue.Phong_ThietBis.Remove(this);
					}
					this._ThietBi.Entity = value;
					if ((value != null))
					{
						value.Phong_ThietBis.Add(this);
						this._MATB = value.MATB;
					}
					else
					{
						this._MATB = default(string);
					}
					this.SendPropertyChanged("ThietBi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
